{"version":3,"sources":["layout/Main/PageTitleExamples/Variation2.tsx","layout/Main/PageTitle.js","modules/Forms/stores/form/types/SubmissionAccess.tsx","modules/Forms/stores/form/types/Resource.tsx","modules/Forms/stores/form/ResourceStore.tsx","modules/Forms/stores/form/context.tsx","modules/Forms/stores/form/useResourceStore.tsx","modules/UI/Forms/Elements/Layouts/Examples/FormGrid.js","modules/UI/Forms/Elements/Layouts/Examples/FormInline.js","modules/UI/Forms/Elements/Layouts/Examples/FormGridFormRow.js","modules/UI/Forms/Elements/Layouts/index.js","modules/UI/Forms/Elements/Controls/Examples/CustomControls.js","modules/UI/Forms/Elements/Controls/Examples/FormBasic.js","modules/UI/Forms/Elements/Controls/Examples/InputGroup/InputGroupOverview.js","modules/UI/Forms/Elements/Controls/Examples/InputGroup/InputGroupSizing.js","modules/UI/Forms/Elements/Controls/Examples/InputGroup/InputGroupAddon.js","modules/UI/Forms/Elements/Controls/Examples/InputGroup/InputGroupButton.js","modules/UI/Forms/Elements/Controls/Examples/InputGroup/InputGroupButtonDropdown.js","modules/UI/Forms/Elements/Controls/Examples/InputGroup/InputGroupButtonShorthand.js","modules/UI/Forms/Elements/Controls/Examples/InputGroup/InputGroups.js","modules/UI/Forms/Elements/Controls/index.js","modules/UI/Forms/Elements/Validation/Examples/Feedback.js","modules/UI/Forms/Elements/Validation/index.js","modules/UI/Forms/index.js","layout/MobileMenu.tsx","layout/Logo.tsx","api/Form.ts","layout/NavBar/NavItems.js","layout/NavBar/VerticalNavWrapper.tsx","layout/SideBar.tsx","layout/Header/Components/SearchBox.js","layout/Header/index.tsx","layout/Footer.tsx"],"names":["TitleComponent2","resourceStore","useResourceStore","useObserver","update","updateResource","create","createResource","fetch","fetchResources","del","deleteResource","useFromStores","_id","useParams","updateOrCreate","a","toast","transition","Slide","closeButton","autoClose","position","type","onClose","deleteForm","className","onClick","color","id","icon","faSave","faTrash","PageTitle","this","props","enablePageTitleIcon","enablePageTitleSubheading","heading","subheading","cx","Component","SubmissionAccess","types","model","roles","optional","array","string","Resource","maybe","tags","union","components","undefined","title","display","action","name","path","machineName","created","modified","owner","null","deleted","number","settings","properties","access","submissionAccess","ResourceStore","resources","editingResource","actions","self","getResource","find","r","setEditingResource","resource","setEditingResourceField","field","value","snap","getSnapshot","edited","flow","fetchProjects","Form","remote","all","console","error","fullStore","JSON","parse","stringify","key","insert","removeById","resourceContext","React","createContext","useContext","FormGrid","component","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","row","for","sm","placeholder","multiple","tag","check","disabled","size","offset","FormInline","inline","hidden","FormGridFormRow","form","md","tabsContent","content","FormElementsLayouts","tabsWrapperClass","transform","showInkBar","items","map","tab","index","getContent","FormsCustomControls","label","FormsDefault","bsSize","FormInputGroupOverview","addonType","addon","aria-label","step","FormInputGroupSizing","FormInputGroupAddon","FormInputGroupButton","toggleDropDown","bind","toggleSplit","state","dropdownOpen","splitButtonOpen","setState","isOpen","toggle","caret","header","divider","outline","split","FormInputGroupButtonDropdown","FormInputGroupButtonShorthand","InputGroups","FormElementsControls","FormsFeedback","valid","invalid","tooltip","FormElementsValidation","Forms","match","url","AppMobileMenu","observer","themeStore","useThemeStore","mobile","activeSecondaryMenuMobile","toggleMobileSidebar","toggleSecondaryMenuMobile","useThemeData","active","faEllipsisV","HeaderLogo","drawerOpen","toggleDrawer","Fluent","pullForm","ComponentsNav","to","Nav","useResourceData","useEffect","elements","forEach","push","activeLinkFromLocation","iconNamePrefix","classNameStateIcon","length","withRouter","AppSidebar","backgroundColor","enableBackgroundImage","enableSidebarShadow","backgroundImage","backgroundImageOpacity","SearchBox","activeSearch","Header","headerBackgroundColor","enableMobileMenuSmall","enableHeaderShadow","AppFooter","href"],"mappings":"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","file":"static/js/17.e37132bc.chunk.js","sourcesContent":["/*eslint-disable */\nimport React, { Fragment } from \"react\";\n\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  UncontrolledTooltip\n} from \"reactstrap\";\n\nimport { faSave, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { toast, Slide } from \"react-toastify\";\n\nimport { useResourceStore } from \"../../../modules/Forms/stores/form/useResourceStore\";\nimport { useObserver } from \"mobx-react\";\nimport { useParams } from \"react-router-dom\";\n\nconst useFromStores = () => {\n  const { resourceStore } = useResourceStore();\n  return useObserver(() => ({\n    update: resourceStore.updateResource,\n    create: resourceStore.createResource,\n    fetch: resourceStore.fetchResources,\n    del: resourceStore.deleteResource\n  }));\n};\n\nconst TitleComponent2 = () => {\n  const { update, create, fetch, del } = useFromStores();\n  let { _id } = useParams();\n\n  const updateOrCreate = async () => {\n    if (_id) {\n      await update();\n    } else {\n      await create();\n    }\n\n    const toastId = toast(\"Restarting server...\", {\n      transition: Slide,\n      closeButton: true,\n      autoClose: 15000,\n      position: \"bottom-center\",\n      type: \"success\",\n      onClose: async () => {\n        await fetch();\n      }\n    });\n  };\n\n  const deleteForm = async () => {\n    if (_id) {\n      await del();\n    }\n\n    const toastId = toast(\"Restarting server...\", {\n      transition: Slide,\n      closeButton: true,\n      autoClose: 15000,\n      position: \"bottom-center\",\n      type: \"success\",\n      onClose: async () => {\n        await fetch();\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      <Button\n        className=\"btn-shadow mr-3\"\n        onClick={updateOrCreate}\n        color=\"primary\"\n        id=\"Tooltip-123\"\n      >\n        <FontAwesomeIcon icon={faSave} />\n      </Button>\n\n      <Button\n        className=\"btn-shadow mr-3\"\n        onClick={deleteForm}\n        color=\"red\"\n        id=\"Tooltip-123\"\n      >\n        <FontAwesomeIcon icon={faTrash} />\n      </Button>\n    </Fragment>\n  );\n};\n\nexport default TitleComponent2;\n","import React, { Component } from \"react\";\nimport cx from \"classnames\";\n\nimport TitleComponent2 from \"./PageTitleExamples/Variation2\";\n\nclass PageTitle extends Component {\n  render() {\n    let {\n      enablePageTitleIcon,\n      enablePageTitleSubheading,\n      heading,\n      icon,\n      subheading\n    } = this.props;\n\n    return (\n      <div className=\"app-page-title\">\n        <div className=\"page-title-wrapper\">\n          <div className=\"page-title-heading\">\n            <div\n              className={cx(\"page-title-icon\", {\n                \"d-none\": !enablePageTitleIcon\n              })}\n            >\n              <i className={icon} />\n            </div>\n            <div className=\"page-title\">\n              {heading}\n              <div\n                className={cx(\"page-title-subheading\", {\n                  \"d-none\": !enablePageTitleSubheading\n                })}\n              >\n                {subheading}\n              </div>\n            </div>\n          </div>\n          <div className=\"page-title-actions\">\n            <TitleComponent2 />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PageTitle;\n","import { types, Instance } from \"mobx-state-tree\";\n\nexport const SubmissionAccess = types.model(\"SubmissionAccess\", {\n  roles: types.optional(types.array(types.string), []),\n  type: types.string\n});\n\nexport type SubmissionAccessType = Instance<typeof SubmissionAccess>;\n","import { types, Instance } from \"mobx-state-tree\";\nimport { SubmissionAccess } from \"./SubmissionAccess\";\n\nexport const Resource = types.model(\"Resource\", {\n  _id: types.maybe(types.string),\n  type: types.string,\n  tags: types.union(types.array(types.string), types.string),\n  components: types.union(types.string, types.undefined),\n  title: types.string,\n  display: types.maybe(types.string),\n  action: types.maybe(types.string),\n  name: types.string,\n  path: types.string,\n  machineName: types.string,\n  created: types.maybe(types.string),\n  modified: types.maybe(types.string),\n  owner: types.union(types.maybe(types.string), types.null),\n  deleted: types.maybe(types.union(types.number, types.undefined)),\n  settings: types.union(types.maybe(types.number), types.null),\n  properties: types.maybe(types.number),\n  access: types.union(types.array(SubmissionAccess), types.array(types.string)),\n  submissionAccess: types.union(\n    types.array(SubmissionAccess),\n    types.array(types.string)\n  )\n});\n\nexport type ResourceType = Instance<typeof Resource>;\n","import { types, flow, getSnapshot } from \"mobx-state-tree\";\nimport { Resource, ResourceType } from \"./types/Resource\";\nimport { Form } from \"../../../../api/Form\";\n\nexport const ResourceStore = types\n  .model(\"ResourceStore\", {\n    resources: types.array(Resource),\n    editingResource: types.maybe(Resource)\n  })\n  .actions(self => ({\n    getResource(path: string): ResourceType | undefined {\n      return self.resources.find(r => r.path === path);\n    },\n    setEditingResource(resource: ResourceType): void {\n      self.editingResource = resource;\n    },\n    setEditingResourceField(field: string, value: any): void {\n      const snap: any = getSnapshot(self);\n      if (!snap || !snap.editingResource) {\n        return;\n      }\n\n      const edited: ResourceType = {\n        ...snap.editingResource,\n        ...{ [field]: value }\n      };\n      self.editingResource = edited;\n    },\n    fetchResources: flow(function* fetchProjects() {\n      try {\n        self.resources = yield Form.remote().all();\n      } catch (error) {\n        console.error(\"Failed to fetch resources\", error);\n      }\n    }),\n    updateResource: flow(function* updateResource() {\n      try {\n        const fullStore = getSnapshot(self);\n        const resource = JSON.parse(\n          JSON.stringify(fullStore.editingResource, (key, value) => {\n            return value === null ? undefined : value;\n          })\n        );\n        /*const updated =*/ yield Form.remote().update(resource);\n        // console.log(updated);\n        // self.editingResource = updated;\n      } catch (error) {\n        console.error(\"Failed to save\", error);\n      }\n    }),\n    createResource: flow(function* updateResource() {\n      try {\n        const fullStore = getSnapshot(self);\n        const resource = JSON.parse(\n          JSON.stringify(fullStore.editingResource, (key, value) => {\n            return value === null ? undefined : value;\n          })\n        );\n        delete resource._id;\n        delete resource.created;\n        delete resource.modified;\n        self.editingResource = yield Form.remote().insert(resource);\n      } catch (error) {\n        console.error(\"Failed to save\", error);\n      }\n    }),\n    deleteResource: flow(function* updateResource() {\n      try {\n        const fullStore = getSnapshot(self);\n        const resource = JSON.parse(JSON.stringify(fullStore.editingResource));\n        yield Form.remote().removeById(resource._id);\n      } catch (error) {\n        console.error(\"Failed to delete\", error);\n      }\n    })\n  }));\n","import React from \"react\";\nimport { ResourceStore } from \"./ResourceStore\";\n\nexport const resourceContext = React.createContext({\n  resourceStore: ResourceStore.create()\n});\n","import React from \"react\";\nimport { resourceContext } from \"./context\";\n\nexport const useResourceStore = () => React.useContext(resourceContext);\n","import React, {Fragment} from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport {\n    Col, Card, CardBody,\n    CardTitle, Button, Form, FormGroup, Label, Input, FormText\n} from 'reactstrap';\n\nexport default class FormGrid extends React.Component {\n    render() {\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <Card className=\"main-card mb-3\">\n                        <CardBody>\n                            <CardTitle>Grid</CardTitle>\n                            <Form>\n                                <FormGroup row>\n                                    <Label for=\"exampleEmail\" sm={2}>Email</Label>\n                                    <Col sm={10}>\n                                        <Input type=\"email\" name=\"email\" id=\"exampleEmail\"\n                                               placeholder=\"with a placeholder\"/>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"examplePassword\" sm={2}>Password</Label>\n                                    <Col sm={10}>\n                                        <Input type=\"password\" name=\"password\" id=\"examplePassword\"\n                                               placeholder=\"password placeholder\"/>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"exampleSelect\" sm={2}>Select</Label>\n                                    <Col sm={10}>\n                                        <Input type=\"select\" name=\"select\" id=\"exampleSelect\"/>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"exampleSelectMulti\" sm={2}>Select Multiple</Label>\n                                    <Col sm={10}>\n                                        <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple/>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"exampleText\" sm={2}>Text Area</Label>\n                                    <Col sm={10}>\n                                        <Input type=\"textarea\" name=\"text\" id=\"exampleText\"/>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"exampleFile\" sm={2}>File</Label>\n                                    <Col sm={10}>\n                                        <Input type=\"file\" name=\"file\" id=\"exampleFile\"/>\n                                        <FormText color=\"muted\">\n                                            This is some placeholder block-level help text for the above input.\n                                            It's a bit lighter and easily wraps to a new line.\n                                        </FormText>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup tag=\"fieldset\" row>\n                                    <legend className=\"col-form-label col-sm-2\">Radio Buttons</legend>\n                                    <Col sm={10}>\n                                        <FormGroup check>\n                                            <Label check>\n                                                <Input type=\"radio\" name=\"radio2\"/>{' '}\n                                                Option one is this and that—be sure to include why it's great\n                                            </Label>\n                                        </FormGroup>\n                                        <FormGroup check>\n                                            <Label check>\n                                                <Input type=\"radio\" name=\"radio2\"/>{' '}\n                                                Option two can be something else and selecting it will deselect option\n                                                one\n                                            </Label>\n                                        </FormGroup>\n                                        <FormGroup check disabled>\n                                            <Label check>\n                                                <Input type=\"radio\" name=\"radio2\" disabled/>{' '}\n                                                Option three is disabled\n                                            </Label>\n                                        </FormGroup>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label for=\"checkbox2\" sm={2}>Checkbox</Label>\n                                    <Col sm={{size: 10}}>\n                                        <FormGroup check>\n                                            <Label check>\n                                                <Input type=\"checkbox\" id=\"checkbox2\"/>{' '}\n                                                Check me out\n                                            </Label>\n                                        </FormGroup>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup check row>\n                                    <Col sm={{size: 10, offset: 2}}>\n                                        <Button>Submit</Button>\n                                    </Col>\n                                </FormGroup>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        );\n    }\n}\n","import React, {Fragment} from 'react';\nimport {Button, Form, FormGroup, Label, Input} from 'reactstrap';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nexport default class FormInline extends React.Component {\n    render() {\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <Form inline>\n                        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                            <Label for=\"exampleEmail22\" className=\"mr-sm-2\">Email</Label>\n                            <Input type=\"email\" name=\"email\" id=\"exampleEmail22\" placeholder=\"something@idk.cool\"/>\n                        </FormGroup>\n                        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                            <Label for=\"examplePassword22\" className=\"mr-sm-2\">Password</Label>\n                            <Input type=\"password\" name=\"password\" id=\"examplePassword22\" placeholder=\"don't tell!\"/>\n                        </FormGroup>\n                        <Button color=\"primary\">Submit</Button>\n                    </Form>\n                    <div className=\"divider\"/>\n                    <Form>\n                        <FormGroup check inline>\n                            <Label check>\n                                <Input type=\"checkbox\"/> Some input\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check inline>\n                            <Label check>\n                                <Input type=\"checkbox\"/> Some other input\n                            </Label>\n                        </FormGroup>\n                    </Form>\n                    <div className=\"divider\"/>\n                    <Form inline>\n                        <FormGroup>\n                            <Label for=\"exampleEmail33\" hidden>Email</Label>\n                            <Input type=\"email\" name=\"email\" className=\"mr-2\" id=\"exampleEmail33\" placeholder=\"Email\"/>\n                        </FormGroup>\n                        {' '}\n                        <FormGroup>\n                            <Label for=\"examplePassword44\" hidden>Password</Label>\n                            <Input type=\"password\" className=\"mr-2\" name=\"password\" id=\"examplePassword44\"\n                                   placeholder=\"Password\"/>\n                        </FormGroup>\n                        {' '}\n                        <Button color=\"primary\">Submit</Button>\n                    </Form>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        );\n    }\n}\n","import React, {Fragment} from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport {\n    Col, Row, Card, CardBody,\n    CardTitle, Button, Form, FormGroup, Label, Input\n} from 'reactstrap';\n\nimport FormInline from './FormInline';\n\nexport default class FormGridFormRow extends React.Component {\n    render() {\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <Card className=\"main-card mb-3\">\n                        <CardBody>\n                            <CardTitle>Grid Rows</CardTitle>\n                            <Form>\n                                <Row form>\n                                    <Col md={6}>\n                                        <FormGroup>\n                                            <Label for=\"exampleEmail11\">Email</Label>\n                                            <Input type=\"email\" name=\"email\" id=\"exampleEmail11\"\n                                                   placeholder=\"with a placeholder\"/>\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md={6}>\n                                        <FormGroup>\n                                            <Label for=\"examplePassword11\">Password</Label>\n                                            <Input type=\"password\" name=\"password\" id=\"examplePassword11\"\n                                                   placeholder=\"password placeholder\"/>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <FormGroup>\n                                    <Label for=\"exampleAddress\">Address</Label>\n                                    <Input type=\"text\" name=\"address\" id=\"exampleAddress\"\n                                           placeholder=\"1234 Main St\"/>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"exampleAddress2\">Address 2</Label>\n                                    <Input type=\"text\" name=\"address2\" id=\"exampleAddress2\"\n                                           placeholder=\"Apartment, studio, or floor\"/>\n                                </FormGroup>\n                                <Row form>\n                                    <Col md={6}>\n                                        <FormGroup>\n                                            <Label for=\"exampleCity\">City</Label>\n                                            <Input type=\"text\" name=\"city\" id=\"exampleCity\"/>\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md={4}>\n                                        <FormGroup>\n                                            <Label for=\"exampleState\">State</Label>\n                                            <Input type=\"text\" name=\"state\" id=\"exampleState\"/>\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md={2}>\n                                        <FormGroup>\n                                            <Label for=\"exampleZip\">Zip</Label>\n                                            <Input type=\"text\" name=\"zip\" id=\"exampleZip\"/>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <FormGroup check>\n                                    <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\"/>\n                                    <Label for=\"exampleCheck\" check>Check me out</Label>\n                                </FormGroup>\n                                <Button color=\"primary\" className=\"mt-2\">Sign in</Button>\n                            </Form>\n\n                        </CardBody>\n                    </Card>\n                    <Card className=\"main-card mb-3\">\n                        <CardBody>\n                            <CardTitle>Inline</CardTitle>\n                            <FormInline/>\n                        </CardBody>\n                    </Card>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        );\n    }\n}\n","import React, {Fragment} from 'react'\n\nimport Tabs from 'react-responsive-tabs';\n\nimport PageTitle from '../../../../../layout/Main/PageTitle';\n\n// Examples\n\nimport FormGrid from './Examples/FormGrid';\nimport FormGridFormRow from './Examples/FormGridFormRow';\n\nconst tabsContent = [\n    {\n        title: 'Layout ',\n        content: <FormGridFormRow/>\n    },\n    {\n        title: 'Grid',\n        content: <FormGrid/>\n    }\n\n\n];\n\nfunction getTabs() {\n    return tabsContent.map((tab, index) => ({\n        title: tab.title,\n        getContent: () => tab.content,\n        key: index,\n    }));\n}\n\nclass FormElementsLayouts extends React.Component {\n\n    render() {\n        return (\n            <Fragment>\n                <PageTitle\n                    heading=\"Form Layouts\"\n                    subheading=\"Build whatever layout you need with our ArchitectUI framework.\"\n                    icon=\"pe-7s-graph text-success\"\n                />\n                <Tabs tabsWrapperClass=\"body-tabs body-tabs-layout\" transform={false} showInkBar={true} items={getTabs()}/>\n            </Fragment>\n        )\n    }\n}\n\nexport default FormElementsLayouts;\n\n\n\n","import React, {Fragment} from 'react';\nimport {\n    Row, Col,\n    Card, CardBody,\n    CardTitle,\n    CustomInput, Form, FormGroup, Label\n} from 'reactstrap';\n\nexport default class FormsCustomControls extends React.Component {\n    render() {\n        return (\n            <Fragment>\n                <Form>\n                    <Row>\n                        <Col md=\"6\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>Checkboxes</CardTitle>\n                                    <FormGroup>\n                                        <div>\n                                            <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox\"\n                                                         label=\"Check this custom checkbox\"/>\n                                            <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox2\"\n                                                         label=\"Or this one\"/>\n                                            <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox3\"\n                                                         label=\"But not this disabled one\"\n                                                         disabled/>\n                                        </div>\n                                    </FormGroup>\n                                </CardBody>\n                            </Card>\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>Inline</CardTitle>\n                                    <FormGroup>\n                                        <div>\n                                            <CustomInput type=\"checkbox\" id=\"exampleCustomInline\"\n                                                         label=\"An inline custom input\"\n                                                         inline/>\n                                            <CustomInput type=\"checkbox\" id=\"exampleCustomInline2\"\n                                                         label=\"and another one\" inline/>\n                                        </div>\n                                    </FormGroup>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col md=\"6\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>Radios</CardTitle>\n                                    <FormGroup>\n                                        <div>\n                                            <CustomInput type=\"radio\" id=\"exampleCustomRadio\" name=\"customRadio\"\n                                                         label=\"Select this custom radio\"/>\n                                            <CustomInput type=\"radio\" id=\"exampleCustomRadio2\" name=\"customRadio\"\n                                                         label=\"Or this one\"/>\n                                            <CustomInput type=\"radio\" id=\"exampleCustomRadio3\"\n                                                         label=\"But not this disabled one\"\n                                                         disabled/>\n                                        </div>\n                                    </FormGroup>\n                                </CardBody>\n                            </Card>\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>Form Select</CardTitle>\n                                    <Row>\n                                        <Col md=\"6\">\n                                            <FormGroup>\n                                                <Label for=\"exampleCustomSelect\">Custom Select</Label>\n                                                <CustomInput type=\"select\" id=\"exampleCustomSelect\"\n                                                             name=\"customSelect\">\n                                                    <option value=\"\">Select</option>\n                                                    <option>Value 1</option>\n                                                    <option>Value 2</option>\n                                                    <option>Value 3</option>\n                                                    <option>Value 4</option>\n                                                    <option>Value 5</option>\n                                                </CustomInput>\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label for=\"exampleCustomMutlipleSelect\">Custom Multiple\n                                                    Select</Label>\n                                                <CustomInput type=\"select\" id=\"exampleCustomMutlipleSelect\"\n                                                             name=\"customSelect\"\n                                                             multiple>\n                                                    <option value=\"\">Select</option>\n                                                    <option>Value 1</option>\n                                                    <option>Value 2</option>\n                                                    <option>Value 3</option>\n                                                    <option>Value 4</option>\n                                                    <option>Value 5</option>\n                                                </CustomInput>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md=\"6\">\n                                            <FormGroup>\n                                                <Label for=\"exampleCustomSelectDisabled\">Custom Select\n                                                    Disabled</Label>\n                                                <CustomInput type=\"select\" id=\"exampleCustomSelectDisabled\"\n                                                             name=\"customSelect\"\n                                                             disabled>\n                                                    <option value=\"\">Select</option>\n                                                    <option>Value 1</option>\n                                                    <option>Value 2</option>\n                                                    <option>Value 3</option>\n                                                    <option>Value 4</option>\n                                                    <option>Value 5</option>\n                                                </CustomInput>\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label for=\"exampleCustomMutlipleSelectDisabled\">Custom Multiple\n                                                    Select\n                                                    Disabled</Label>\n                                                <CustomInput type=\"select\" id=\"exampleCustomMutlipleSelectDisabled\"\n                                                             name=\"customSelect\" multiple\n                                                             disabled>\n                                                    <option value=\"\">Select</option>\n                                                    <option>Value 1</option>\n                                                    <option>Value 2</option>\n                                                    <option>Value 3</option>\n                                                    <option>Value 4</option>\n                                                    <option>Value 5</option>\n                                                </CustomInput>\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Form>\n            </Fragment>\n        );\n    }\n}\n","import React, {Fragment} from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport FormsCustomControls from './CustomControls';\n\nimport {\n    Button, Form,\n    FormGroup, Label,\n    Input, FormText,\n    Row, Col,\n    Card, CardBody,\n    CardTitle,\n} from 'reactstrap';\n\nexport default class FormsDefault extends React.Component {\n    render() {\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <div>\n                        <Row>\n                        <Col md=\"6\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>Controls Types</CardTitle>\n                                    <Form>\n                                        <FormGroup>\n                                            <Label for=\"exampleEmail\">Email</Label>\n                                            <Input type=\"email\" name=\"email\" id=\"exampleEmail\"\n                                                   placeholder=\"with a placeholder\"/>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label for=\"examplePassword\">Password</Label>\n                                            <Input type=\"password\" name=\"password\" id=\"examplePassword\"\n                                                   placeholder=\"password placeholder\"/>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label for=\"exampleSelect\">Select</Label>\n                                            <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                            </Input>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label for=\"exampleSelectMulti\">Select Multiple</Label>\n                                            <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                            </Input>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label for=\"exampleText\">Text Area</Label>\n                                            <Input type=\"textarea\" name=\"text\" id=\"exampleText\"/>\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label for=\"exampleFile\">File</Label>\n                                            <Input type=\"file\" name=\"file\" id=\"exampleFile\"/>\n                                            <FormText color=\"muted\">\n                                                This is some placeholder block-level help text for the above input.\n                                                It's a bit lighter and easily wraps to a new line.\n                                            </FormText>\n                                        </FormGroup>\n                                        <Button color=\"primary\" className=\"mt-1\">Submit</Button>\n                                    </Form>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col md=\"6\">\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>Sizing</CardTitle>\n                                    <Form>\n                                        <Input className=\"mb-2\" placeholder=\"lg\" bsSize=\"lg\"/>\n                                        <Input className=\"mb-2\" placeholder=\"default\"/>\n                                        <Input className=\"mb-2\" placeholder=\"sm\" bsSize=\"sm\"/>\n                                        <div className=\"divider\"/>\n                                        <Input className=\"mb-2\" type=\"select\" bsSize=\"lg\">\n                                            <option>Large Select</option>\n                                        </Input>\n                                        <Input className=\"mb-2\" type=\"select\">\n                                            <option>Default Select</option>\n                                        </Input>\n                                        <Input type=\"select\" bsSize=\"sm\">\n                                            <option>Small Select</option>\n                                        </Input>\n                                    </Form>\n                                </CardBody>\n                            </Card>\n                            <Card className=\"main-card mb-3\">\n                                <CardBody>\n                                    <CardTitle>Checkboxes & Radios</CardTitle>\n                                    <Form>\n                                        <FormGroup tag=\"fieldset\">\n                                            <FormGroup check>\n                                                <Label check>\n                                                    <Input type=\"radio\" name=\"radio1\"/>{' '}\n                                                    Option one is this and that—be sure to include why it's great\n                                                </Label>\n                                            </FormGroup>\n                                            <FormGroup check>\n                                                <Label check>\n                                                    <Input type=\"radio\" name=\"radio1\"/>{' '}\n                                                    Option two can be something else and selecting it will deselect\n                                                    option\n                                                    one\n                                                </Label>\n                                            </FormGroup>\n                                            <FormGroup check disabled>\n                                                <Label check>\n                                                    <Input type=\"radio\" name=\"radio1\" disabled/>{' '}\n                                                    Option three is disabled\n                                                </Label>\n                                            </FormGroup>\n                                        </FormGroup>\n                                        <FormGroup check>\n                                            <Label check>\n                                                <Input type=\"checkbox\"/>{' '}\n                                                Check me out\n                                            </Label>\n                                        </FormGroup>\n                                    </Form>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                        <FormsCustomControls/>\n                    </div>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        );\n    }\n}\n","import React from 'react';\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\n\nconst FormInputGroupOverview = (props) => {\n  return (\n    <div>\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n        <Input placeholder=\"username\" />\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>\n            <Input addon type=\"checkbox\" aria-label=\"Checkbox for following text input\" />\n          </InputGroupText>\n        </InputGroupAddon>\n        <Input placeholder=\"Check it out\" />\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <Input placeholder=\"username\" />\n        <InputGroupAddon addonType=\"append\">@example.com</InputGroupAddon>\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>$</InputGroupText>\n          <InputGroupText>$</InputGroupText>\n        </InputGroupAddon>\n        <Input placeholder=\"Dolla dolla billz yo!\" />\n        <InputGroupAddon addonType=\"append\">\n          <InputGroupText>$</InputGroupText>\n          <InputGroupText>$</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\n        <Input placeholder=\"Amount\" type=\"number\" step=\"1\" />\n        <InputGroupAddon addonType=\"append\">.00</InputGroupAddon>\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default FormInputGroupOverview;\n","import React from 'react';\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\n\nconst FormInputGroupSizing = (props) => {\n  return (\n    <div>\n      <InputGroup size=\"lg\">\n        <InputGroupAddon addonType=\"prepend\">@lg</InputGroupAddon>\n        <Input />\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">@normal</InputGroupAddon>\n        <Input />\n      </InputGroup>\n      <br />\n      <InputGroup size=\"sm\">\n        <InputGroupAddon addonType=\"prepend\">@sm</InputGroupAddon>\n        <Input />\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default FormInputGroupSizing;\n","import React from 'react';\nimport { InputGroup, InputGroupText, InputGroupAddon, Input } from 'reactstrap';\n\nconst FormInputGroupAddon = (props) => {\n  return (\n    <div>\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>To the Left!</InputGroupText>\n        </InputGroupAddon>\n        <Input />\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <Input />\n        <InputGroupAddon addonType=\"append\">\n          <InputGroupText>To the Right!</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>To the Left!</InputGroupText>\n        </InputGroupAddon>\n        <Input placeholder=\"and...\" />\n        <InputGroupAddon addonType=\"append\">\n          <InputGroupText>To the Right!</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default FormInputGroupAddon;\n","import React from 'react';\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupButtonDropdown,\n  Input,\n  Button,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n } from 'reactstrap';\n\nexport default class FormInputGroupButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDropDown = this.toggleDropDown.bind(this);\n    this.toggleSplit = this.toggleSplit.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      splitButtonOpen: false\n    };\n  }\n\n  toggleDropDown() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  toggleSplit() {\n    this.setState({\n      splitButtonOpen: !this.state.splitButtonOpen\n    });\n  }\n\n\n  render() {\n    return (\n      <div>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\"><Button>I'm a button</Button> </InputGroupAddon>\n          <Input />\n        </InputGroup>\n        <br />\n        <InputGroup>\n          <Input />\n          <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.dropdownOpen} toggle={this.toggleDropDown}>\n            <DropdownToggle caret>\n              Button Dropdown\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem header>Header</DropdownItem>\n              <DropdownItem disabled>Action</DropdownItem>\n              <DropdownItem>Another Action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Another Action</DropdownItem>\n            </DropdownMenu>\n          </InputGroupButtonDropdown>\n        </InputGroup>\n        <br />\n        <InputGroup>\n          <InputGroupButtonDropdown addonType=\"prepend\" isOpen={this.state.splitButtonOpen} toggle={this.toggleSplit}>\n            <Button outline>Split Button</Button>\n            <DropdownToggle split outline />\n            <DropdownMenu>\n              <DropdownItem header>Header</DropdownItem>\n              <DropdownItem disabled>Action</DropdownItem>\n              <DropdownItem>Another Action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Another Action</DropdownItem>\n            </DropdownMenu>\n          </InputGroupButtonDropdown>\n          <Input placeholder=\"and...\" />\n          <InputGroupAddon addonType=\"append\"><Button color=\"secondary\">I'm a button</Button> </InputGroupAddon>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {InputGroupButtonDropdown, InputGroup, Input, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\n\nconst propTypes = {\n    addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n};\n\nclass FormInputGroupButtonDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n\n        return (\n            <Fragment>\n                <InputGroup>\n                    <InputGroupButtonDropdown addonType=\"prepend\" isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                        <DropdownToggle caret>\n                            Button Dropdown\n                        </DropdownToggle>\n                        <DropdownMenu>\n                            <DropdownItem header>Header</DropdownItem>\n                            <DropdownItem disabled>Action</DropdownItem>\n                            <DropdownItem>Another Action</DropdownItem>\n                            <DropdownItem divider/>\n                            <DropdownItem>Another Action</DropdownItem>\n                        </DropdownMenu>\n                    </InputGroupButtonDropdown>\n                    <Input/>\n                </InputGroup>\n            </Fragment>\n        );\n    }\n}\n\nFormInputGroupButtonDropdown.propTypes = propTypes;\n\nexport default FormInputGroupButtonDropdown;\n","import React from 'react';\nimport { InputGroup, InputGroupAddon, Button, Input } from 'reactstrap';\n\nconst FormInputGroupButtonShorthand = (props) => {\n  return (\n    <div>\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <Button>To the Left!</Button>\n        </InputGroupAddon>\n        <Input />\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <Input />\n        <InputGroupAddon addonType=\"append\">\n          <Button color=\"secondary\">To the Right!</Button>\n        </InputGroupAddon>\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <Button color=\"danger\">To the Left!</Button>\n        </InputGroupAddon>\n        <Input placeholder=\"and...\" />\n        <InputGroupAddon addonType=\"append\">\n          <Button color=\"success\">To the Right!</Button>\n        </InputGroupAddon>\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default FormInputGroupButtonShorthand;\n","import React, {Fragment} from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport {\n    Row, Col,\n    Card, CardBody,\n    CardTitle\n} from 'reactstrap';\n\nimport FormInputGroupOverview from './InputGroupOverview';\nimport FormInputGroupSizing from './InputGroupSizing';\nimport FormInputGroupAddon from './InputGroupAddon';\nimport FormInputGroupButton from './InputGroupButton';\nimport FormInputGroupButtonDropdown from './InputGroupButtonDropdown';\nimport FormInputGroupButtonShorthand from './InputGroupButtonShorthand';\n\nconst InputGroups = (props) => {\n    return (\n        <Fragment>\n            <ReactCSSTransitionGroup\n                component=\"div\"\n                transitionName=\"TabsAnimation\"\n                transitionAppear={true}\n                transitionAppearTimeout={0}\n                transitionEnter={false}\n                transitionLeave={false}>\n                <Row>\n                    <Col md=\"6\">\n                        <Card className=\"main-card mb-3\">\n                            <CardBody>\n                                <CardTitle>Input Groups</CardTitle>\n                                <FormInputGroupOverview/>\n                            </CardBody>\n                        </Card>\n                        <Card className=\"main-card mb-3\">\n                            <CardBody>\n                                <CardTitle>Input Group Button Dropdown</CardTitle>\n                                <FormInputGroupButtonDropdown/>\n                            </CardBody>\n                        </Card>\n                        <Card className=\"main-card mb-3\">\n                            <CardBody>\n                                <CardTitle>Input Group Button Shorthand</CardTitle>\n                                <FormInputGroupButtonShorthand/>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col md=\"6\">\n                        <Card className=\"main-card mb-3\">\n                            <CardBody>\n                                <CardTitle>Input Group Sizing</CardTitle>\n                                <FormInputGroupSizing/>\n                            </CardBody>\n                        </Card>\n                        <Card className=\"main-card mb-3\">\n                            <CardBody>\n                                <CardTitle>Input Group Addon</CardTitle>\n                                <FormInputGroupAddon/>\n                            </CardBody>\n                        </Card>\n                        <Card className=\"main-card mb-3\">\n                            <CardBody>\n                                <CardTitle>Input Group Button</CardTitle>\n                                <FormInputGroupButton/>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </ReactCSSTransitionGroup>\n        </Fragment>\n    );\n};\n\nexport default InputGroups;\n","import React, {Fragment} from 'react'\n\nimport Tabs from 'react-responsive-tabs';\n\nimport PageTitle from '../../../../../layout/Main/PageTitle';\n\n// Examples\n\nimport FormsDefault from './Examples/FormBasic';\nimport InputGroups from './Examples/InputGroup/InputGroups';\n\nconst tabsContent = [\n    {\n        title: 'Basic',\n        content: <FormsDefault/>\n    },\n    {\n        title: 'Input Groups',\n        content: <InputGroups/>\n    },\n];\n\nfunction getTabs() {\n    return tabsContent.map((tab, index) => ({\n        title: tab.title,\n        getContent: () => tab.content,\n        key: index,\n    }));\n}\n\nclass FormElementsControls extends React.Component {\n\n    render() {\n        return (\n            <Fragment>\n                <PageTitle\n                    heading=\"Form Controls\"\n                    subheading=\"Wide selection of forms controls, using the Bootstrap 4 code base, but built with React.\"\n                    icon=\"pe-7s-display1 icon-gradient bg-premium-dark\"\n                />\n                <Tabs tabsWrapperClass=\"body-tabs body-tabs-layout\" transform={false} showInkBar={true} items={getTabs()}/>\n            </Fragment>\n        )\n    }\n}\n\nexport default FormElementsControls;\n\n\n\n","import React, {Fragment} from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport {\n    Card, CardBody, Row, Col,\n    CardTitle, Form, FormGroup, Label, Input, FormFeedback, FormText\n} from 'reactstrap';\n\nexport default class FormsFeedback extends React.Component {\n    render() {\n        return (\n            <Fragment>\n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <div>\n                        <Row>\n                            <Col md=\"6\">\n                                <Card className=\"main-card mb-3\">\n                                    <CardBody>\n                                        <CardTitle>Basic</CardTitle>\n                                        <Form>\n                                            <FormGroup>\n                                                <Label for=\"exampleEmail\">Input without validation</Label>\n                                                <Input/>\n                                                <FormFeedback>You will not be able to see this</FormFeedback>\n                                                <FormText>Example help text that remains unchanged.</FormText>\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label for=\"exampleEmail\">Valid input</Label>\n                                                <Input valid/>\n                                                <FormFeedback valid>Sweet! that name is available</FormFeedback>\n                                                <FormText>Example help text that remains unchanged.</FormText>\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label for=\"examplePassword\">Invalid input</Label>\n                                                <Input invalid/>\n                                                <FormFeedback>Oh noes! that name is already taken</FormFeedback>\n                                                <FormText>Example help text that remains unchanged.</FormText>\n                                            </FormGroup>\n                                        </Form>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                            <Col md=\"6\">\n                                <Card className=\"main-card mb-3\">\n                                    <CardBody className=\"pb-5\">\n                                        <CardTitle>Alternate Style</CardTitle>\n                                        <Form>\n                                            <FormGroup>\n                                                <Label for=\"exampleEmail\">Input without validation</Label>\n                                                <Input/>\n                                                <FormFeedback tooltip>You will not be able to see this</FormFeedback>\n                                                <FormText>Example help text that remains unchanged.</FormText>\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label for=\"exampleEmail\">Valid input</Label>\n                                                <Input valid/>\n                                                <FormFeedback valid tooltip>Sweet! that name is available</FormFeedback>\n                                                <FormText>Example help text that remains unchanged.</FormText>\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label for=\"examplePassword\">Invalid input</Label>\n                                                <Input invalid/>\n                                                <FormFeedback tooltip>Oh noes! that name is already taken</FormFeedback>\n                                                <FormText>Example help text that remains unchanged.</FormText>\n                                            </FormGroup>\n                                        </Form>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <br/><br/><br/><br/><br/><br/>\n                        <br/><br/><br/><br/><br/><br/>\n                    </div>\n                </ReactCSSTransitionGroup>\n            </Fragment>\n        );\n    }\n}\n","import React, {Fragment} from 'react'\n\nimport Tabs from 'react-responsive-tabs';\n\nimport PageTitle from '../../../../../layout/Main/PageTitle';\n\n// Examples\n\nimport FormsFeedback from './Examples/Feedback';\n\nconst tabsContent = [\n    {\n        title: 'Feedback',\n        content: <FormsFeedback/>\n    },\n\n];\n\nfunction getTabs() {\n    return tabsContent.map((tab, index) => ({\n        title: tab.title,\n        getContent: () => tab.content,\n        key: index,\n    }));\n}\n\nclass FormElementsValidation extends React.Component {\n\n    render() {\n        return (\n            <Fragment>\n                <PageTitle\n                    heading=\"Form Validation\"\n                    subheading=\"Inline validation is very easy to implement using the ArchitectUI.\"\n                    icon=\"lnr-picture text-danger\"\n                />\n                <Tabs tabsWrapperClass=\"body-tabs body-tabs-layout\" transform={false} showInkBar={true} items={getTabs()}/>\n            </Fragment>\n        )\n    }\n}\n\nexport default FormElementsValidation;\n\n\n\n","import React, {Fragment} from 'react';\nimport {Route} from 'react-router-dom';\n\n// Forms\n\nimport FormElementsLayouts from \"./Elements/Layouts\";\nimport FormElementsControls from \"./Elements/Controls\";\nimport FormElementsValidation from \"./Elements/Validation\";\n\n// Layout\n\nimport AppHeader from '../../../layout/Header';\nimport AppSidebar from '../../../layout/SideBar';\nimport AppFooter from '../../../layout/Footer';\n\nconst Forms = ({match}) => (\n    <Fragment>\n        <AppHeader/>\n        <div className=\"app-main\">\n            <AppSidebar/>\n            <div className=\"app-main__outer\">\n                <div className=\"app-main__inner\">\n\n                    {/* Form Elements */}\n\n                    <Route path={`${match.url}/controls`} component={FormElementsControls}/>\n                    <Route path={`${match.url}/layouts`} component={FormElementsLayouts}/>\n                    <Route path={`${match.url}/validation`} component={FormElementsValidation}/>\n\n                </div>\n                <AppFooter/>\n            </div>\n        </div>\n    </Fragment>\n);\n\nexport default Forms;","import React from \"react\";\nimport Hamburger from \"react-hamburgers\";\nimport cx from \"classnames\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"reactstrap\";\nimport { useThemeStore } from \"../modules/UI/stores/theme/useThemeStore\";\nimport { observer, useObserver } from \"mobx-react\";\n\nconst useThemeData = () => {\n  const { themeStore } = useThemeStore();\n  return useObserver(() => ({\n    mobile: themeStore.mobile,\n    activeSecondaryMenuMobile: themeStore.activeSecondaryMenuMobile,\n    toggleMobileSidebar: themeStore.toggleMobileSidebar,\n    toggleSecondaryMenuMobile: themeStore.toggleSecondaryMenuMobile\n  }));\n};\n\nconst AppMobileMenu = observer(() => {\n  const {\n    mobile,\n    activeSecondaryMenuMobile,\n    toggleMobileSidebar,\n    toggleSecondaryMenuMobile\n  } = useThemeData();\n  return (\n    <>\n      <div className=\"app-header__mobile-menu\">\n        <div onClick={toggleMobileSidebar}>\n          <Hamburger\n            active={mobile}\n            type=\"elastic\"\n            onClick={toggleMobileSidebar}\n          />\n        </div>\n      </div>\n      <div className=\"app-header__menu\">\n        <span onClick={toggleMobileSidebar}>\n          <Button\n            size=\"sm\"\n            className={cx(\"btn-icon btn-icon-only\", {\n              active: activeSecondaryMenuMobile\n            })}\n            color=\"primary\"\n            onClick={toggleSecondaryMenuMobile}\n          >\n            <div className=\"btn-icon-wrapper\">\n              <FontAwesomeIcon icon={faEllipsisV} />\n            </div>\n          </Button>\n        </span>\n      </div>\n    </>\n  );\n});\n\nexport default AppMobileMenu;\n","import React from \"react\";\nimport Hamburger from \"react-hamburgers\";\nimport AppMobileMenu from \"./MobileMenu\";\nimport { observer, useObserver } from \"mobx-react\";\nimport { useThemeStore } from \"../modules/UI/stores/theme/useThemeStore\";\n\nconst useThemeData = () => {\n  const { themeStore } = useThemeStore();\n  return useObserver(() => ({\n    drawerOpen: themeStore.drawerOpen,\n    toggleDrawer: themeStore.toggleDrawer\n  }));\n};\n\nconst HeaderLogo = observer(() => {\n  const { drawerOpen, toggleDrawer } = useThemeData();\n\n  return (\n    <>\n      <div className=\"app-header__logo\">\n        <div className=\"logo-src\" />\n        <div className=\"header__pane ml-auto\">\n          <div onClick={toggleDrawer}>\n            <Hamburger active={drawerOpen} type=\"elastic\" />\n          </div>\n        </div>\n      </div>\n      <AppMobileMenu />\n    </>\n  );\n});\n\nexport default HeaderLogo;\n","import { Fluent } from \"@goatlab/fluent\";\n\nexport const Form = Fluent.model(\"Form\", {\n  remote: {\n    path: \"form\",\n    pullForm: true\n  }\n});\n","export const MainNav = [];\nexport const ComponentsNav = [\n  {\n    icon: \"pe-7s-diamond\",\n    label: \"Elements\",\n    content: [\n      {\n        label: \"Standard Buttons\",\n        to: \"#/elements/buttons-standard\"\n      },\n      {\n        label: \"Dropdowns\",\n        to: \"#/elements/dropdowns\"\n      },\n      {\n        label: \"Icons\",\n        to: \"#/elements/icons\"\n      },\n      {\n        label: \"Badges\",\n        to: \"#/elements/badges-labels\"\n      },\n      {\n        label: \"Cards\",\n        to: \"#/elements/cards\"\n      },\n      {\n        label: \"List Groups\",\n        to: \"#/elements/list-group\"\n      },\n      {\n        label: \"Navigation Menus\",\n        to: \"#/elements/navigation\"\n      },\n      {\n        label: \"Utilities\",\n        to: \"#/elements/utilities\"\n      },\n      {\n        label: \"Tabs\",\n        to: \"#/components/tabs\"\n      },\n      {\n        label: \"Notifications\",\n        to: \"#/components/notifications\"\n      },\n      {\n        label: \"Modals\",\n        to: \"#/components/modals\"\n      },\n      {\n        label: \"Progress Bar\",\n        to: \"#/components/progress-bar\"\n      },\n      {\n        label: \"Tooltips & Popovers\",\n        to: \"#/components/tooltips-popovers\"\n      },\n      {\n        label: \"Carousel\",\n        to: \"#/components/carousel\"\n      },\n      {\n        label: \"Maps\",\n        to: \"#/components/maps\"\n      },\n      {\n        icon: \"pe-7s-light\",\n        label: \"Controls\",\n        to: \"#/formsui/controls\"\n      },\n      {\n        icon: \"pe-7s-eyedropper\",\n        label: \"Layouts\",\n        to: \"#/formsui/layouts\"\n      },\n      {\n        icon: \"pe-7s-pendrive\",\n        label: \"Validation\",\n        to: \"#/formsui/validation\"\n      },\n      {\n        icon: \"pe-7s-graph2\",\n        label: \"Dashboard Boxes\",\n        to: \"#/widgets/dashboard-boxes\"\n      },\n      {\n        icon: \"pe-7s-graph2\",\n        label: \"ChartJS\",\n        to: \"#/charts/chartjs\"\n      },\n      {\n        icon: \"pe-7s-rocket\",\n        label: \"Dashboard Example\",\n        to: \"#/dashboards/basic\"\n      }\n    ]\n  }\n];\n","/*eslint-disable */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport MetisMenu from \"react-metismenu\";\nimport { ComponentsNav } from \"./NavItems\";\n\nimport { observer, useObserver } from \"mobx-react\";\nimport { useResourceStore } from \"../../modules/Forms/stores/form/useResourceStore\";\n\nconst useResourceData = () => {\n  const { resourceStore } = useResourceStore();\n  return useObserver(() => ({\n    resources: resourceStore.resources,\n    fetchResources: resourceStore.fetchResources\n  }));\n};\n\ninterface navLink {\n  label: string;\n  to: string;\n}\ninterface NavContainer {\n  icon: string;\n  label: string;\n  content: navLink[];\n}\n\nconst Nav = observer(() => {\n  const { resources, fetchResources } = useResourceData();\n  useEffect(() => {\n    fetchResources();\n  }, []);\n\n  const elements: NavContainer[] = [\n    {\n      icon: \"pe-7s-share\",\n      label: \"Forms\",\n      content: []\n    }\n  ];\n\n  resources.forEach((resource, index: number) => {\n    elements[0].content.push({\n      label: resource.title,\n      to: `#/forms/${resource._id}`\n    });\n  });\n\n  return (\n    <Fragment>\n      <h5 className=\"app-sidebar__heading\">API</h5>\n      <MetisMenu\n        content={[\n          {\n            icon: \"pe-7s-way\",\n            label: \"Create form\",\n            to: \"#/forms\"\n          }\n        ]}\n        activeLinkFromLocation\n        className=\"vertical-nav-menu\"\n        iconNamePrefix=\"\"\n        classNameStateIcon=\"pe-7s-angle-down\"\n      />\n      {elements[0].content.length > 0 && (\n        <MetisMenu\n          content={elements}\n          activeLinkFromLocation\n          className=\"vertical-nav-menu\"\n          iconNamePrefix=\"\"\n          classNameStateIcon=\"pe-7s-angle-down\"\n        />\n      )}\n      <h5 className=\"app-sidebar__heading\">UI Components</h5>\n      <MetisMenu\n        content={ComponentsNav}\n        activeLinkFromLocation\n        className=\"vertical-nav-menu\"\n        iconNamePrefix=\"\"\n        classNameStateIcon=\"pe-7s-angle-down\"\n      />\n    </Fragment>\n  );\n});\n\nexport default withRouter(Nav);\n","import React from \"react\";\nimport cx from \"classnames\";\nimport Nav from \"./NavBar/VerticalNavWrapper\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport HeaderLogo from \"./Logo\";\nimport { useThemeStore } from \"../modules/UI/stores/theme/useThemeStore\";\nimport { observer, useObserver } from \"mobx-react\";\n\nconst useThemeData = () => {\n  const { themeStore } = useThemeStore();\n  return useObserver(() => ({\n    backgroundColor: themeStore.backgroundColor,\n    enableBackgroundImage: themeStore.enableBackgroundImage,\n    toggleMobileSidebar: themeStore.toggleMobileSidebar,\n    enableSidebarShadow: themeStore.enableSidebarShadow,\n    backgroundImage: themeStore.backgroundImage,\n    backgroundImageOpacity: themeStore.backgroundImageOpacity\n  }));\n};\n\nconst AppSidebar = observer(() => {\n  let {\n    toggleMobileSidebar,\n    backgroundColor,\n    enableSidebarShadow,\n    backgroundImageOpacity\n  } = useThemeData();\n\n  return (\n    <>\n      <div className=\"sidebar-mobile-overlay\" onClick={toggleMobileSidebar} />\n      <ReactCSSTransitionGroup\n        component=\"div\"\n        className={cx(\"app-sidebar\", backgroundColor, {\n          \"sidebar-shadow\": enableSidebarShadow\n        })}\n        transitionName=\"SidebarAnimation\"\n        transitionAppear={true}\n        transitionAppearTimeout={1500}\n        transitionEnter={false}\n        transitionLeave={false}\n      >\n        <HeaderLogo />\n        <PerfectScrollbar>\n          <div className=\"app-sidebar__inner\">\n            <Nav />\n          </div>\n        </PerfectScrollbar>\n        <div className={cx(\"app-sidebar-bg\", backgroundImageOpacity)}></div>\n      </ReactCSSTransitionGroup>\n    </>\n  );\n});\n\nexport default AppSidebar;\n","import React, { Fragment } from \"react\";\nimport cx from \"classnames\";\n\nclass SearchBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSearch: false\n    };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div\n          className={cx(\"search-wrapper\", {\n            active: this.state.activeSearch\n          })}\n        >\n          <div className=\"input-holder\">\n            <input type=\"text\" className=\"search-input\" />\n            <button\n              onClick={() =>\n                this.setState({ activeSearch: !this.state.activeSearch })\n              }\n              className=\"search-icon\"\n            >\n              <span />\n            </button>\n          </div>\n          <button\n            onClick={() =>\n              this.setState({ activeSearch: !this.state.activeSearch })\n            }\n            className=\"close\"\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default SearchBox;\n","import React from \"react\";\nimport cx from \"classnames\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport HeaderLogo from \"../Logo\";\nimport SearchBox from \"./Components/SearchBox\";\n// import UserBox from \"./Components/UserBox\";\n\nimport { useThemeStore } from \"../../modules/UI/stores/theme/useThemeStore\";\nimport { observer, useObserver } from \"mobx-react\";\n\nconst useThemeData = () => {\n  const { themeStore } = useThemeStore();\n  return useObserver(() => ({\n    headerBackgroundColor: themeStore.headerBackgroundColor,\n    enableMobileMenuSmall: themeStore.enableMobileMenuSmall,\n    enableHeaderShadow: themeStore.enableHeaderShadow\n  }));\n};\n\nconst Header = observer(() => {\n  let {\n    headerBackgroundColor,\n    enableMobileMenuSmall,\n    enableHeaderShadow\n  } = useThemeData();\n\n  return (\n    <>\n      <ReactCSSTransitionGroup\n        component=\"div\"\n        className={cx(\"app-header\", headerBackgroundColor, {\n          \"header-shadow\": enableHeaderShadow\n        })}\n        transitionName=\"HeaderAnimation\"\n        transitionAppear={true}\n        transitionAppearTimeout={1500}\n        transitionEnter={false}\n        transitionLeave={false}\n      >\n        <HeaderLogo />\n\n        <div\n          className={cx(\"app-header__content\", {\n            \"header-mobile-open\": enableMobileMenuSmall\n          })}\n        >\n          <div className=\"app-header-left\">\n            <SearchBox />\n          </div>\n          <div className=\"app-header-right\">{/*<UserBox />*/}</div>\n        </div>\n      </ReactCSSTransitionGroup>\n    </>\n  );\n});\n\nexport default Header;\n","/*eslint-disable */\nimport React, { Fragment } from \"react\";\n\nclass AppFooter extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <div className=\"app-footer\">\n          <div className=\"app-footer__inner\">\n            <div className=\"app-footer-left\">\n              <ul className=\"nav\">\n                <li className=\"nav-item\">\n                  <a href=\"\" className=\"nav-link\">\n                    Footer Link 1\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"\" className=\"nav-link\">\n                    Footer Link 2\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div className=\"app-footer-right\">\n              <ul className=\"nav\">\n                <li className=\"nav-item\">\n                  <a href=\"\" className=\"nav-link\">\n                    Footer Link 3\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"\" className=\"nav-link\">\n                    <div className=\"badge badge-success mr-1 ml-0\">\n                      <small>NEW</small>\n                    </div>\n                    Footer Link 4\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default AppFooter;\n"],"sourceRoot":""}